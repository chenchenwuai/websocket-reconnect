{"version":3,"file":"websocket-reconnect.umd.js","sources":["../src/index.ts"],"sourcesContent":["export class Event {\n\tpublic target: any;\n\tpublic type: string;\n\tconstructor (type: string, target: any) {\n\t\tthis.target = target\n\t\tthis.type = type\n\t}\n}\nexport class ErrorEvent extends Event {\n\tpublic message: string;\n\tpublic error: Error;\n\tconstructor (error: Error, target: any) {\n\t\tsuper('error', target)\n\t\tthis.message = error.message\n\t\tthis.error = error\n\t}\n}\nexport class CloseEvent extends Event {\n\tpublic code: number;\n\tpublic reason: string;\n\tpublic wasClean = true;\n\tconstructor (code = 1000, reason = '', target: any) {\n\t\tsuper('close', target)\n\t\tthis.code = code\n\t\tthis.reason = reason\n\t}\n}\nexport interface WebSocketEventMap {\n\tclose: CloseEvent;\n\terror: ErrorEvent;\n\tmessage: MessageEvent;\n\topen: Event;\n}\nexport interface WebSocketEventListenerMap {\n\tclose: (event: CloseEvent) => void | {handleEvent: (event: CloseEvent) => void};\n\terror: (event: ErrorEvent) => void | {handleEvent: (event: ErrorEvent) => void};\n\tmessage: (event: MessageEvent) => void | {handleEvent: (event: MessageEvent) => void};\n\topen: (event: Event) => void | {handleEvent: (event: Event) => void};\n}\nexport type ListenersMap = {\n\terror: Array<WebSocketEventListenerMap['error']>;\n\tmessage: Array<WebSocketEventListenerMap['message']>;\n\topen: Array<WebSocketEventListenerMap['open']>;\n\tclose: Array<WebSocketEventListenerMap['close']>;\n}\nexport type Message = string | ArrayBufferLike | Blob | ArrayBufferView\nexport type Options = {\n\tWebSocket?: any\n\tmaxReconnectionDelay?: number\n\tminReconnectionDelay?: number\n\treconnectionDelayGrowFactor?: number\n\tminUptime?: number\n\tconnectionTimeout?: number\n\tmaxRetries?: number\n\tmaxEnqueuedMessages?: number\n\tstartClosed?: boolean\n\tenableHeartbeat?: boolean,\n\tpingTimeout?: number,\n\tpongTimeout?: number,\n\tpingMsg?: Message,\n\tdebug?: boolean\n}\nexport type UrlProvider = string | (() => string) | (() => Promise<string>)\n\nconst DEFAULT = {\n\tmaxReconnectionDelay: 10000,\n\tminReconnectionDelay: 1000 + Math.random() * 4000,\n\tminUptime: 5000,\n\treconnectionDelayGrowFactor: 1.3,\n\tconnectionTimeout: 4000,\n\tmaxRetries: Infinity,\n\tmaxEnqueuedMessages: Infinity,\n\tstartClosed: false,\n\tenableHeartbeat: false,\n\tpingTimeout: 10000,\n\tpongTimeout: 10000,\n\tpingMsg: '\\r\\n',\n\tdebug: false\n}\n\nconst getGlobalWebSocket = (): WebSocket | undefined => {\n\tif (typeof WebSocket !== 'undefined') {\n\t\t// @ts-ignore\n\t\treturn WebSocket\n\t}\n}\n\nconst isWebSocket = (w: any) => typeof w !== 'undefined' && !!w && w.CLOSING === 2\n\nexport default class WebsocketReconnect {\n\tprivate _ws?: WebSocket\n\tprivate _binaryType: BinaryType = 'blob'\n\tprivate _messageQueue: Message[] = []\n\tprivate _listeners: ListenersMap = {\n\t\terror: [],\n\t\tmessage: [],\n\t\topen: [],\n\t\tclose: []\n\t}\n\n\tprivate _retryCount = -1\n\tprivate _uptimeTimeout: any\n\tprivate _connectTimeout: any\n\tprivate _shouldReconnect = true\n\tprivate _connectLock = false\n\tprivate _closeCalled = false\n\tprivate _pingIntervalId: any = 0\n\tprivate _pongTimeoutId: any = 0\n\n\tprivate readonly _url: UrlProvider\n\tprivate readonly _protocols: string | string[]\n\tprivate readonly _options: Options\n\n\tconstructor (url: UrlProvider, protocols?: string | string[], options: Options = {}) {\n\t\tthis._url = url\n\t\tthis._protocols = protocols ?? ''\n\t\tthis._options = options\n\t\tif (this._options.startClosed) {\n\t\t\tthis._shouldReconnect = false\n\t\t}\n\t\tthis._connect()\n\t}\n\t/**\n\t * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n\t *\n\t * Can be set, to change how binary data is returned. The default is \"blob\".\n\t */\n\tget binaryType (): BinaryType {\n\t\treturn this._ws ? this._ws.binaryType : this._binaryType\n\t}\n\tset binaryType (value: BinaryType) {\n\t\tthis._binaryType = value\n\t\tif (this._ws) {\n\t\t\tthis._ws.binaryType = value\n\t\t}\n\t}\n\n\t/**\n\t * Returns the number or connection retries\n\t */\n\tget retryCount (): number {\n\t\treturn Math.max(this._retryCount, 0)\n\t}\n\t/**\n\t * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n\t *\n\t * If the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n\t */\n\tget bufferedAmount (): number {\n\t\tconst bytes = this._messageQueue.reduce((acc, message) => {\n\t\t\tif (typeof message === 'string') {\n\t\t\t\tacc += message.length\n\t\t\t} else if (message instanceof Blob) {\n\t\t\t\tacc += message.size\n\t\t\t} else {\n\t\t\t\tacc += message.byteLength\n\t\t\t}\n\t\t\treturn acc\n\t\t}, 0)\n\t\treturn bytes + (this._ws ? this._ws.bufferedAmount : 0)\n\t}\n\t/**\n\t * Returns the extensions selected by the server, if any.\n\t */\n\tget extensions (): string {\n\t\treturn this._ws ? this._ws.extensions : ''\n\t}\n\t/**\n\t * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.\n\t */\n\tget protocol (): string {\n\t\treturn this._ws ? this._ws.protocol : ''\n\t}\n\t/**\n\t * Returns the state of the WebSocket object's connection. It can have the values described below.\n\t */\n\tget readyState (): number {\n\t\tif (this._ws) {\n\t\t\treturn this._ws.readyState\n\t\t}\n\t\treturn this._options.startClosed ? WebSocket.CLOSED : WebSocket.CLOSING\n\t}\n\t/**\n\t * Returns the URL that was used to establish the WebSocket connection.\n\t */\n\tget url (): string {\n\t\treturn this._ws ? this._ws.url : ''\n\t}\n\n\tstatic get CONNECTING (): number {\n\t\treturn 0\n\t}\n\tstatic get OPEN (): number {\n\t\treturn 1\n\t}\n\tstatic get CLOSING (): number {\n\t\treturn 2\n\t}\n\tstatic get CLOSED (): number {\n\t\treturn 3\n\t}\n\n\tget CONNECTING (): number {\n\t\treturn WebSocket.CONNECTING\n\t}\n\tget OPEN (): number {\n\t\treturn WebSocket.OPEN\n\t}\n\tget CLOSING (): number {\n\t\treturn WebSocket.CLOSING\n\t}\n\tget CLOSED (): number {\n\t\treturn WebSocket.CLOSED\n\t}\n\n\t/**\n\t * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\n\t */\n\tpublic onclose: ((event: CloseEvent) => any) | null = null\n\t/**\n\t * An event listener to be called when an error occurs\n\t */\n\tpublic onerror: ((event: ErrorEvent) => any)|null = null\n\t/**\n\t * An event listener to be called when a message is received from the server\n\t */\n\tpublic onmessage: ((message: MessageEvent) => void) | null = null\n\t/**\n\t * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n\t * this indicates that the connection is ready to send and receive data\n\t */\n\tpublic onopen: ((event: Event) => void) | null = null\n\n\t/**\n\t * Closes the WebSocket connection or connection attempt, if any. If the connection is already\n\t * CLOSED, this method does nothing\n\t */\n\tpublic close (code?: number, reason?: string): void {\n\t\tthis._closeCalled = true\n\t\tthis._shouldReconnect = false\n\t\tthis._clearTimeouts()\n\t\tif (!this._ws) {\n\t\t\tthis._debug('close enqueued: no ws instance')\n\t\t\treturn\n\t\t}\n\t\tif (this._ws.readyState === this.CLOSED) {\n\t\t\tthis._debug('close: already closed')\n\t\t\treturn\n\t\t}\n\t\tthis._ws.close(code, reason)\n\t}\n\t/**\n\t * Enqueue specified data to be transmitted to the server over the WebSocket connection\n\t */\n\tpublic send (data: Message): void {\n\t\tif (this._ws && this._ws.readyState === this.OPEN) {\n\t\t\tthis._debug('send', data)\n\t\t\tthis._ws.send(data)\n\t\t} else {\n\t\t\tconst { maxEnqueuedMessages = DEFAULT.maxEnqueuedMessages } = this._options\n\t\t\tif (this._messageQueue.length < maxEnqueuedMessages) {\n\t\t\t\tthis._debug('enqueue', data)\n\t\t\t\tthis._messageQueue.push(data)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register an event handler of a specific event type\n\t */\n\tpublic addEventListener<T extends keyof WebSocketEventListenerMap> (\n\t\ttype: T,\n\t\tlistener: WebSocketEventListenerMap[T]\n\t): void {\n\t\tif (this._listeners[type]) {\n\t\t\t// @ts-ignore\n\t\t\tthis._listeners[type].push(listener)\n\t\t}\n\t}\n\t/**\n\t * Removes an event listener\n\t */\n\tpublic removeEventListener<T extends keyof WebSocketEventListenerMap> (\n\t\ttype: T,\n\t\tlistener: WebSocketEventListenerMap\n\t): void {\n\t\tif (this._listeners[type]) {\n\t\t\t// @ts-ignore\n\t\t\tthis._listeners = this._listeners[type].filter(l => l !== listener)\n\t\t}\n\t}\n\n\t/**\n\t * dispatch event\n\t * @param event Event\n\t */\n\tpublic dispatchEvent (event: Event): boolean {\n\t\tconst listeners = this._listeners[event.type as keyof WebSocketEventListenerMap]\n\t\tif (listeners) {\n\t\t\tfor (const listener of listeners) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis._callEventListener(event, listener)\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tprivate _callEventListener<T extends keyof WebSocketEventListenerMap> (\n\t\tevent: WebSocketEventMap[T],\n\t\tlistener: WebSocketEventListenerMap[T]\n\t): void {\n\t\tif ('handleEvent' in listener) {\n\t\t\t// @ts-ignore\n\t\t\tlistener.handleEvent(event)\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tlistener(event)\n\t\t}\n\t}\n\n\t/**\n\t * Closes the WebSocket connection or connection attempt and connects again.\n\t * Resets retry counter;\n\t */\n\tpublic reconnect (code?: number, reason?: string): void {\n\t\tthis._shouldReconnect = true\n\t\tthis._closeCalled = false\n\t\tthis._retryCount = -1\n\t\tif (!this._ws || this._ws.readyState === WebSocket.CLOSED) {\n\t\t\tthis._connect()\n\t\t} else {\n\t\t\tthis._disconnect(code, reason)\n\t\t\tthis._connect()\n\t\t}\n\t}\n\n\tprivate _connect () {\n\t\tif (this._connectLock || !this._shouldReconnect) {\n\t\t\treturn\n\t\t}\n\t\tthis._connectLock = true\n\n\t\tconst {\n\t\t\tmaxRetries = DEFAULT.maxRetries,\n\t\t\tconnectionTimeout = DEFAULT.connectionTimeout,\n\t\t\tWebSocket = getGlobalWebSocket()\n\t\t} = this._options\n\n\t\tif (this._retryCount >= maxRetries) {\n\t\t\tthis._debug('max retries reached', this._retryCount, '>=', maxRetries)\n\t\t\treturn\n\t\t}\n\n\t\tthis._retryCount++\n\n\t\tthis._debug('connect', this._retryCount)\n\t\tthis._removeListeners()\n\n\t\tif (!isWebSocket(WebSocket)) {\n\t\t\tthrow Error('No valid WebSocket class provided')\n\t\t}\n\n\t\tthis._wait()\n\t\t\t.then(() => this._getNextUrl(this._url))\n\t\t\t.then(url => {\n\t\t\t\tif (this._closeCalled) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis._debug('connect', { url, protocols: this._protocols })\n\t\t\t\tthis._ws = this._protocols ? new WebSocket(url, this._protocols) : new WebSocket(url)\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tthis._ws!.binaryType = this._binaryType\n\t\t\t\tthis._connectLock = false\n\t\t\t\tthis._addEventListeners()\n\n\t\t\t\tthis._connectTimeout = setTimeout(() => this._handleTimeout(), connectionTimeout)\n\t\t\t})\n\t}\n\n\tprivate _disconnect (code = 1000, reason?: string) {\n\t\tthis._clearTimeouts()\n\t\tif (!this._ws) {\n\t\t\treturn\n\t\t}\n\t\tthis._removeListeners()\n\t\ttry {\n\t\t\tthis._ws.close(code, reason)\n\t\t\tthis._handleClose(new CloseEvent(code, reason, this))\n\t\t} catch (error) {\n\t\t\tthrow Error(error)\n\t\t}\n\t}\n\n\tprivate _handleOpen = (event: Event) => {\n\t\tthis._debug('open event')\n\t\tconst { minUptime = DEFAULT.minUptime } = this._options\n\n\t\tclearTimeout(this._connectTimeout)\n\t\tthis._uptimeTimeout = setTimeout(() => this._acceptOpen(), minUptime)\n\n\t\tif (this._ws) {\n\t\t\tthis._ws.binaryType = this._binaryType\n\t\t}\n\n\t\tthis._options.enableHeartbeat && this._heartCheck()\n\n\t\tthis._messageQueue.forEach(message => this._ws?.send(message))\n\t\tthis._messageQueue = []\n\n\t\tif (this.onopen) {\n\t\t\tthis.onopen(event)\n\t\t}\n\t\tthis._listeners.open.forEach(listener => this._callEventListener(event, listener))\n\t}\n\tprivate _handleMessage = (event: MessageEvent) => {\n\t\tthis._debug('message event')\n\t\tif (this.onmessage) {\n\t\t\tthis.onmessage(event)\n\t\t}\n\t\tthis._listeners.message.forEach(listener => this._callEventListener(event, listener))\n\t}\n\tprivate _handleClose = (event: CloseEvent) => {\n\t\tthis._debug('close event')\n\t\tthis._clearTimeouts()\n\t\tif (this._shouldReconnect) {\n\t\t\tthis._connect()\n\t\t}\n\t\tif (this.onclose) {\n\t\t\tthis.onclose(event)\n\t\t}\n\t\tthis._listeners.close.forEach(listener => this._callEventListener(event, listener))\n\t}\n\tprivate _handleError = (event: ErrorEvent) => {\n\t\tthis._debug('error event', event.message)\n\t\tthis._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined)\n\n\t\tif (this.onerror) {\n\t\t\tthis.onerror(event)\n\t\t}\n\t\tthis._debug('exec error listeners')\n\t\tthis._listeners.error.forEach(listener => this._callEventListener(event, listener))\n\n\t\tthis._connect()\n\t}\n\n\tprivate _wait (): Promise<void> {\n\t\treturn new Promise(resolve => {\n\t\t\tsetTimeout(resolve, this._getNextDelay())\n\t\t})\n\t}\n\n\tprivate _getNextDelay (): number {\n\t\tconst {\n\t\t\treconnectionDelayGrowFactor = DEFAULT.reconnectionDelayGrowFactor,\n\t\t\tminReconnectionDelay = DEFAULT.minReconnectionDelay,\n\t\t\tmaxReconnectionDelay = DEFAULT.maxReconnectionDelay\n\t\t} = this._options\n\t\tlet delay = 0\n\t\tif (this._retryCount > 0) {\n\t\t\tdelay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount)\n\t\t\tif (delay > maxReconnectionDelay) {\n\t\t\t\tdelay = maxReconnectionDelay\n\t\t\t}\n\t\t}\n\t\tthis._debug('next delay', delay)\n\t\treturn delay\n\t}\n\n\tprivate _getNextUrl (urlProvider: UrlProvider): Promise<string> {\n\t\tif (typeof urlProvider === 'string') {\n\t\t\treturn Promise.resolve(urlProvider)\n\t\t} else if (typeof urlProvider === 'function') {\n\t\t\tconst url = urlProvider()\n\t\t\tif (typeof url === 'string') {\n\t\t\t\treturn Promise.resolve(url)\n\t\t\t}\n\t\t\tif (url.then !== undefined) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t}\n\t\tthrow Error('Invalid URL')\n\t}\n\n\tprivate _handleTimeout () {\n\t\tthis._debug('timeout event')\n\t\tthis._handleError(new ErrorEvent(Error('TIMEOUT'), this))\n\t}\n\n\tprivate _acceptOpen () {\n\t\tthis._debug('accept open')\n\t\tthis._retryCount = 0\n\t}\n\n\tprivate _debug (...args: any[]) {\n\t\tif (this._options.debug) {\n\t\t\tconsole.log('WSR', ...args)\n\t\t}\n\t}\n\n\tprivate _addEventListeners () {\n\t\tif (!this._ws) {\n\t\t\treturn\n\t\t}\n\t\tthis._debug('addListeners')\n\t\tthis._ws.addEventListener('open', this._handleOpen)\n\t\tthis._ws.addEventListener('message', this._handleMessage)\n\t\tthis._ws.addEventListener('close', this._handleClose)\n\t\t// @ts-ignore\n\t\tthis._ws.addEventListener('error', this._handleError)\n\t}\n\tprivate _removeListeners () {\n\t\tif (!this._ws) {\n\t\t\treturn\n\t\t}\n\t\tthis._ws.removeEventListener('open', this._handleOpen)\n\t\tthis._ws.removeEventListener('message', this._handleMessage)\n\t\tthis._ws.removeEventListener('close', this._handleClose)\n\t\t// @ts-ignore\n\t\tthis._ws.removeEventListener('error', this._handleError)\n\t}\n\n\tprivate _heartCheck () {\n\t\tthis._heartReset()\n\t\tthis._heartStart()\n\t}\n\n\tprivate _heartStart () {\n\t\tconst {\n\t\t\tenableHeartbeat = DEFAULT.enableHeartbeat,\n\t\t\tpingTimeout = DEFAULT.pingTimeout,\n\t\t\tpongTimeout = DEFAULT.pongTimeout,\n\t\t\tpingMsg = DEFAULT.pingMsg\n\t\t} = this._options\n\t\tif (!this._shouldReconnect && !enableHeartbeat) {\n\t\t\treturn\n\t\t}\n\t\tthis._pingIntervalId = setInterval(() => {\n\t\t\tthis._debug('ping')\n\t\t\tthis.send(pingMsg)\n\t\t\tthis._pongTimeoutId = setTimeout(() => {\n\t\t\t\tthis._debug('Pong Timeout')\n\t\t\t\tthis.close()\n\t\t\t}, pongTimeout)\n\t\t}, pingTimeout)\n\t}\n\n\tprivate _heartReset () {\n\t\tclearInterval(this._pingIntervalId)\n\t\tclearTimeout(this._pongTimeoutId)\n\t}\n\n\tprivate _clearTimeouts (): void {\n\t\tclearTimeout(this._connectTimeout)\n\t\tclearTimeout(this._uptimeTimeout)\n\t\tthis._heartReset()\n\t}\n}\n"],"names":["type","target","__extends","error","_super","_this","message","Event","code","reason","DEFAULT","maxReconnectionDelay","minReconnectionDelay","Math","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","maxEnqueuedMessages","startClosed","enableHeartbeat","pingTimeout","pongTimeout","pingMsg","debug","getGlobalWebSocket","WebSocket","isWebSocket","w","CLOSING","url","protocols","options","open","close","event","_debug","_a","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","_binaryType","_heartCheck","_messageQueue","forEach","send","onopen","_listeners","listener","_callEventListener","onmessage","_clearTimeouts","_shouldReconnect","_connect","onclose","_disconnect","undefined","onerror","_url","_protocols","Object","WebsocketReconnect","value","max","_retryCount","bytes","reduce","acc","length","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","CLOSED","CONNECTING","OPEN","_closeCalled","data","push","filter","l","listeners","listeners_1","__values","handleEvent","_connectLock","_b","_c","_d","_removeListeners","Error","_wait","then","_getNextUrl","_addEventListeners","_handleTimeout","_handleClose","CloseEvent","Promise","resolve","_getNextDelay","delay","pow","urlProvider","_handleError","ErrorEvent","_i","args","console","log","addEventListener","_handleOpen","_handleMessage","removeEventListener","_heartReset","_heartStart","_e","_pingIntervalId","setInterval","_pongTimeoutId","clearInterval"],"mappings":"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"}