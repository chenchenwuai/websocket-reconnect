{"version":3,"file":"websocket-reconnect.umd.js","sources":["../src/index.ts"],"sourcesContent":["export class Event {\n\tpublic target: any;\n\tpublic type: string;\n\tconstructor (type: string, target: any) {\n\t\tthis.target = target\n\t\tthis.type = type\n\t}\n}\nexport class ErrorEvent extends Event {\n\tpublic message: string;\n\tpublic error: Error;\n\tconstructor (error: Error, target: any) {\n\t\tsuper('error', target)\n\t\tthis.message = error.message\n\t\tthis.error = error\n\t}\n}\nexport class CloseEvent extends Event {\n\tpublic code: number;\n\tpublic reason: string;\n\tpublic wasClean = true;\n\tconstructor (code = 1000, reason = '', target: any) {\n\t\tsuper('close', target)\n\t\tthis.code = code\n\t\tthis.reason = reason\n\t}\n}\nexport interface WebSocketEventMap {\n\tclose: CloseEvent;\n\terror: ErrorEvent;\n\tmessage: MessageEvent;\n\topen: Event;\n}\nexport interface WebSocketEventListenerMap {\n\tclose: (event: CloseEvent) => void | {handleEvent: (event: CloseEvent) => void};\n\terror: (event: ErrorEvent) => void | {handleEvent: (event: ErrorEvent) => void};\n\tmessage: (event: MessageEvent) => void | {handleEvent: (event: MessageEvent) => void};\n\topen: (event: Event) => void | {handleEvent: (event: Event) => void};\n}\nexport type ListenersMap = {\n\terror: Array<WebSocketEventListenerMap['error']>;\n\tmessage: Array<WebSocketEventListenerMap['message']>;\n\topen: Array<WebSocketEventListenerMap['open']>;\n\tclose: Array<WebSocketEventListenerMap['close']>;\n}\nexport type Message = string | ArrayBufferLike | Blob | ArrayBufferView\nexport type Options = {\n\tWebSocket?: any\n\tmaxReconnectionDelay?: number\n\tminReconnectionDelay?: number\n\treconnectionDelayGrowFactor?: number\n\tminUptime?: number\n\tconnectionTimeout?: number\n\tmaxRetries?: number\n\tmaxEnqueuedMessages?: number\n\tstartClosed?: boolean\n\tenableHeartbeat?: boolean,\n\tpingTimeout?: number,\n\tpongTimeout?: number,\n\tpingMsg?: Message,\n\tdebug?: boolean\n}\nexport type UrlProvider = string | (() => string) | (() => Promise<string>)\n\nconst DEFAULT = {\n\tmaxReconnectionDelay: 10000,\n\tminReconnectionDelay: 1000 + Math.random() * 4000,\n\tminUptime: 5000,\n\treconnectionDelayGrowFactor: 1.3,\n\tconnectionTimeout: 4000,\n\tmaxRetries: Infinity,\n\tmaxEnqueuedMessages: Infinity,\n\tstartClosed: false,\n\tenableHeartbeat: false,\n\tpingTimeout: 10000,\n\tpongTimeout: 10000,\n\tpingMsg: '\\r\\n',\n\tdebug: false\n}\n\nconst getGlobalWebSocket = (): WebSocket | undefined => {\n\tif (typeof WebSocket !== 'undefined') {\n\t\t// @ts-ignore\n\t\treturn WebSocket\n\t}\n}\n\nconst isWebSocket = (w: any) => typeof w !== 'undefined' && !!w && w.CLOSING === 2\n\nexport default class WebsocketReconnect {\n\tprivate _ws?: WebSocket\n\tprivate _binaryType: BinaryType = 'blob'\n\tprivate _messageQueue: Message[] = []\n\tprivate _listeners: ListenersMap = {\n\t\terror: [],\n\t\tmessage: [],\n\t\topen: [],\n\t\tclose: []\n\t}\n\n\tprivate _retryCount = -1\n\tprivate _uptimeTimeout: any\n\tprivate _connectTimeout: any\n\tprivate _shouldReconnect = true\n\tprivate _connectLock = false\n\tprivate _closeCalled = false\n\tprivate _pingIntervalId: any = 0\n\tprivate _pongTimeoutId: any = 0\n\n\tprivate readonly _url: UrlProvider\n\tprivate readonly _protocols: string | string[]\n\tprotected readonly _options: Required<Options>\n\n\tconstructor (url: UrlProvider, protocols?: string | string[], options: Options = {}) {\n\t\tthis._url = url\n\t\tthis._protocols = protocols ?? ''\n\t\tthis._options = {\n\t\t\tWebSocket: getGlobalWebSocket(),\n\t\t\tmaxReconnectionDelay: 10000,\n\t\t\tminReconnectionDelay: 1000 + Math.random() * 4000,\n\t\t\tminUptime: 5000,\n\t\t\treconnectionDelayGrowFactor: 1.3,\n\t\t\tconnectionTimeout: 4000,\n\t\t\tmaxRetries: Infinity,\n\t\t\tmaxEnqueuedMessages: Infinity,\n\t\t\tstartClosed: false,\n\t\t\tenableHeartbeat: false,\n\t\t\tpingTimeout: 10000,\n\t\t\tpongTimeout: 10000,\n\t\t\tpingMsg: '\\r\\n',\n\t\t\tdebug: false,\n\t\t\t...options\n\t\t}\n\t\tif (this._options.startClosed) {\n\t\t\tthis._shouldReconnect = false\n\t\t}\n\t\tthis._connect()\n\t}\n\t/**\n\t * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n\t *\n\t * Can be set, to change how binary data is returned. The default is \"blob\".\n\t */\n\tget binaryType (): BinaryType {\n\t\treturn this._ws ? this._ws.binaryType : this._binaryType\n\t}\n\tset binaryType (value: BinaryType) {\n\t\tthis._binaryType = value\n\t\tif (this._ws) {\n\t\t\tthis._ws.binaryType = value\n\t\t}\n\t}\n\n\t/**\n\t * Returns the number or connection retries\n\t */\n\tget retryCount (): number {\n\t\treturn Math.max(this._retryCount, 0)\n\t}\n\t/**\n\t * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n\t *\n\t * If the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n\t */\n\tget bufferedAmount (): number {\n\t\tconst bytes = this._messageQueue.reduce((acc, message) => {\n\t\t\tif (typeof message === 'string') {\n\t\t\t\tacc += message.length\n\t\t\t} else if (message instanceof Blob) {\n\t\t\t\tacc += message.size\n\t\t\t} else {\n\t\t\t\tacc += message.byteLength\n\t\t\t}\n\t\t\treturn acc\n\t\t}, 0)\n\t\treturn bytes + (this._ws ? this._ws.bufferedAmount : 0)\n\t}\n\t/**\n\t * Returns the extensions selected by the server, if any.\n\t */\n\tget extensions (): string {\n\t\treturn this._ws ? this._ws.extensions : ''\n\t}\n\t/**\n\t * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.\n\t */\n\tget protocol (): string {\n\t\treturn this._ws ? this._ws.protocol : ''\n\t}\n\t/**\n\t * Returns the state of the WebSocket object's connection. It can have the values described below.\n\t */\n\tget readyState (): number {\n\t\tif (this._ws) {\n\t\t\treturn this._ws.readyState\n\t\t}\n\t\treturn this._options.startClosed ? WebSocket.CLOSED : WebSocket.CLOSING\n\t}\n\t/**\n\t * Returns the URL that was used to establish the WebSocket connection.\n\t */\n\tget url (): string {\n\t\treturn this._ws ? this._ws.url : ''\n\t}\n\n\tstatic get CONNECTING (): number {\n\t\treturn 0\n\t}\n\tstatic get OPEN (): number {\n\t\treturn 1\n\t}\n\tstatic get CLOSING (): number {\n\t\treturn 2\n\t}\n\tstatic get CLOSED (): number {\n\t\treturn 3\n\t}\n\n\tget CONNECTING (): number {\n\t\treturn WebSocket.CONNECTING\n\t}\n\tget OPEN (): number {\n\t\treturn WebSocket.OPEN\n\t}\n\tget CLOSING (): number {\n\t\treturn WebSocket.CLOSING\n\t}\n\tget CLOSED (): number {\n\t\treturn WebSocket.CLOSED\n\t}\n\n\t/**\n\t * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\n\t */\n\tpublic onclose: ((event: CloseEvent) => any) | null = null\n\t/**\n\t * An event listener to be called when an error occurs\n\t */\n\tpublic onerror: ((event: ErrorEvent) => any)|null = null\n\t/**\n\t * An event listener to be called when a message is received from the server\n\t */\n\tpublic onmessage: ((message: MessageEvent) => void) | null = null\n\t/**\n\t * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n\t * this indicates that the connection is ready to send and receive data\n\t */\n\tpublic onopen: ((event: Event) => void) | null = null\n\n\t/**\n\t * Closes the WebSocket connection or connection attempt, if any. If the connection is already\n\t * CLOSED, this method does nothing\n\t */\n\tpublic close (code?: number, reason?: string): void {\n\t\tthis._closeCalled = true\n\t\tthis._shouldReconnect = false\n\t\tthis._clearTimeouts()\n\t\tif (!this._ws) {\n\t\t\tthis._debug('close enqueued: no ws instance')\n\t\t\treturn\n\t\t}\n\t\tif (this._ws.readyState === this.CLOSED) {\n\t\t\tthis._debug('close: already closed')\n\t\t\treturn\n\t\t}\n\t\tthis._ws.close(code, reason)\n\t}\n\t/**\n\t * Enqueue specified data to be transmitted to the server over the WebSocket connection\n\t */\n\tpublic send (data: Message): void {\n\t\tif (this._ws && this._ws.readyState === this.OPEN) {\n\t\t\tthis._debug('send', data)\n\t\t\tthis._ws.send(data)\n\t\t} else {\n\t\t\tconst { maxEnqueuedMessages } = this._options\n\t\t\tif (this._messageQueue.length < maxEnqueuedMessages) {\n\t\t\t\tthis._debug('enqueue', data)\n\t\t\t\tthis._messageQueue.push(data)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register an event handler of a specific event type\n\t */\n\tpublic addEventListener<T extends keyof WebSocketEventListenerMap> (\n\t\ttype: T,\n\t\tlistener: WebSocketEventListenerMap[T]\n\t): void {\n\t\tif (this._listeners[type]) {\n\t\t\t// @ts-ignore\n\t\t\tthis._listeners[type].push(listener)\n\t\t}\n\t}\n\t/**\n\t * Removes an event listener\n\t */\n\tpublic removeEventListener<T extends keyof WebSocketEventListenerMap> (\n\t\ttype: T,\n\t\tlistener: WebSocketEventListenerMap\n\t): void {\n\t\tif (this._listeners[type]) {\n\t\t\t// @ts-ignore\n\t\t\tthis._listeners = this._listeners[type].filter(l => l !== listener)\n\t\t}\n\t}\n\n\t/**\n\t * dispatch event\n\t * @param event Event\n\t */\n\tpublic dispatchEvent (event: Event): boolean {\n\t\tconst listeners = this._listeners[event.type as keyof WebSocketEventListenerMap]\n\t\tif (listeners) {\n\t\t\tfor (const listener of listeners) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis._callEventListener(event, listener)\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tprivate _callEventListener<T extends keyof WebSocketEventListenerMap> (\n\t\tevent: WebSocketEventMap[T],\n\t\tlistener: WebSocketEventListenerMap[T]\n\t): void {\n\t\tif ('handleEvent' in listener) {\n\t\t\t// @ts-ignore\n\t\t\tlistener.handleEvent(event)\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tlistener(event)\n\t\t}\n\t}\n\n\t/**\n\t * Closes the WebSocket connection or connection attempt and connects again.\n\t * Resets retry counter;\n\t */\n\tpublic reconnect (code?: number, reason?: string): void {\n\t\tthis._shouldReconnect = true\n\t\tthis._closeCalled = false\n\t\tthis._retryCount = -1\n\t\tif (!this._ws || this._ws.readyState === WebSocket.CLOSED) {\n\t\t\tthis._connect()\n\t\t} else {\n\t\t\tthis._disconnect(code, reason)\n\t\t\tthis._connect()\n\t\t}\n\t}\n\n\tprivate _connect () {\n\t\tif (this._connectLock || !this._shouldReconnect) {\n\t\t\treturn\n\t\t}\n\t\tthis._connectLock = true\n\n\t\tconst {\n\t\t\tmaxRetries,\n\t\t\tconnectionTimeout,\n\t\t\tWebSocket\n\t\t} = this._options\n\n\t\tif (this._retryCount >= maxRetries) {\n\t\t\tthis._debug('max retries reached', this._retryCount, '>=', maxRetries)\n\t\t\treturn\n\t\t}\n\n\t\tthis._retryCount++\n\n\t\tthis._debug('connect', this._retryCount)\n\t\tthis._removeListeners()\n\n\t\tif (!isWebSocket(WebSocket)) {\n\t\t\tthrow Error('No valid WebSocket class provided')\n\t\t}\n\n\t\tthis._wait()\n\t\t\t.then(() => this._getNextUrl(this._url))\n\t\t\t.then(url => {\n\t\t\t\tif (this._closeCalled) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis._debug('connect', { url, protocols: this._protocols })\n\t\t\t\tthis._ws = this._protocols ? new WebSocket(url, this._protocols) : new WebSocket(url)\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tthis._ws!.binaryType = this._binaryType\n\t\t\t\tthis._connectLock = false\n\t\t\t\tthis._addEventListeners()\n\n\t\t\t\tthis._connectTimeout = setTimeout(() => this._handleTimeout(), connectionTimeout)\n\t\t\t})\n\t}\n\n\tprivate _disconnect (code = 1000, reason?: string) {\n\t\tthis._clearTimeouts()\n\t\tif (!this._ws) {\n\t\t\treturn\n\t\t}\n\t\tthis._removeListeners()\n\t\ttry {\n\t\t\tthis._ws.close(code, reason)\n\t\t\tthis._handleClose(new CloseEvent(code, reason, this))\n\t\t} catch (error) {\n\t\t\tthrow Error(error)\n\t\t}\n\t}\n\n\tprivate _handleOpen = (event: Event) => {\n\t\tthis._debug('open event')\n\t\tconst { minUptime } = this._options\n\n\t\tclearTimeout(this._connectTimeout)\n\t\tthis._uptimeTimeout = setTimeout(() => this._acceptOpen(), minUptime)\n\n\t\tif (this._ws) {\n\t\t\tthis._ws.binaryType = this._binaryType\n\t\t}\n\n\t\tthis._options.enableHeartbeat && this._heartCheck()\n\n\t\tthis._messageQueue.forEach(message => this._ws?.send(message))\n\t\tthis._messageQueue = []\n\n\t\tif (this.onopen) {\n\t\t\tthis.onopen(event)\n\t\t}\n\t\tthis._listeners.open.forEach(listener => this._callEventListener(event, listener))\n\t}\n\tprivate _handleMessage = (event: MessageEvent) => {\n\t\tthis._debug('message event')\n\t\tif (this.onmessage) {\n\t\t\tthis.onmessage(event)\n\t\t}\n\t\tthis._listeners.message.forEach(listener => this._callEventListener(event, listener))\n\t}\n\tprivate _handleClose = (event: CloseEvent) => {\n\t\tthis._debug('close event')\n\t\tthis._clearTimeouts()\n\t\tif (this._shouldReconnect) {\n\t\t\tthis._connect()\n\t\t}\n\t\tif (this.onclose) {\n\t\t\tthis.onclose(event)\n\t\t}\n\t\tthis._listeners.close.forEach(listener => this._callEventListener(event, listener))\n\t}\n\tprivate _handleError = (event: ErrorEvent) => {\n\t\tthis._debug('error event', event.message)\n\t\tthis._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined)\n\n\t\tif (this.onerror) {\n\t\t\tthis.onerror(event)\n\t\t}\n\t\tthis._debug('exec error listeners')\n\t\tthis._listeners.error.forEach(listener => this._callEventListener(event, listener))\n\n\t\tthis._connect()\n\t}\n\n\tprivate _wait (): Promise<void> {\n\t\treturn new Promise(resolve => {\n\t\t\tsetTimeout(resolve, this._getNextDelay())\n\t\t})\n\t}\n\n\tprivate _getNextDelay (): number {\n\t\tconst {\n\t\t\treconnectionDelayGrowFactor,\n\t\t\tminReconnectionDelay,\n\t\t\tmaxReconnectionDelay\n\t\t} = this._options\n\t\tlet delay = 0\n\t\tif (this._retryCount > 0) {\n\t\t\tdelay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount)\n\t\t\tif (delay > maxReconnectionDelay) {\n\t\t\t\tdelay = maxReconnectionDelay\n\t\t\t}\n\t\t}\n\t\tthis._debug('next delay', delay)\n\t\treturn delay\n\t}\n\n\tprivate _getNextUrl (urlProvider: UrlProvider): Promise<string> {\n\t\tif (typeof urlProvider === 'string') {\n\t\t\treturn Promise.resolve(urlProvider)\n\t\t} else if (typeof urlProvider === 'function') {\n\t\t\tconst url = urlProvider()\n\t\t\tif (typeof url === 'string') {\n\t\t\t\treturn Promise.resolve(url)\n\t\t\t}\n\t\t\tif (url.then !== undefined) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t}\n\t\tthrow Error('Invalid URL')\n\t}\n\n\tprivate _handleTimeout () {\n\t\tthis._debug('timeout event')\n\t\tthis._handleError(new ErrorEvent(Error('TIMEOUT'), this))\n\t}\n\n\tprivate _acceptOpen () {\n\t\tthis._debug('accept open')\n\t\tthis._retryCount = 0\n\t}\n\n\tprivate _debug (...args: any[]) {\n\t\tif (this._options.debug) {\n\t\t\tconsole.log('WSR', ...args)\n\t\t}\n\t}\n\n\tprivate _addEventListeners () {\n\t\tif (!this._ws) {\n\t\t\treturn\n\t\t}\n\t\tthis._debug('addListeners')\n\t\tthis._ws.addEventListener('open', this._handleOpen)\n\t\tthis._ws.addEventListener('message', this._handleMessage)\n\t\tthis._ws.addEventListener('close', this._handleClose)\n\t\t// @ts-ignore\n\t\tthis._ws.addEventListener('error', this._handleError)\n\t}\n\tprivate _removeListeners () {\n\t\tif (!this._ws) {\n\t\t\treturn\n\t\t}\n\t\tthis._ws.removeEventListener('open', this._handleOpen)\n\t\tthis._ws.removeEventListener('message', this._handleMessage)\n\t\tthis._ws.removeEventListener('close', this._handleClose)\n\t\t// @ts-ignore\n\t\tthis._ws.removeEventListener('error', this._handleError)\n\t}\n\n\tprivate _heartCheck () {\n\t\tthis._heartReset()\n\t\tthis._heartStart()\n\t}\n\n\tprivate _heartStart () {\n\t\tconst { enableHeartbeat, pingTimeout, pongTimeout, pingMsg } = this._options\n\t\tif (!this._shouldReconnect && !enableHeartbeat) {\n\t\t\treturn\n\t\t}\n\t\tthis._pingIntervalId = setInterval(() => {\n\t\t\tthis._debug('ping')\n\t\t\tthis.send(pingMsg)\n\t\t\tthis._pongTimeoutId = setTimeout(() => {\n\t\t\t\tthis._debug('Pong Timeout')\n\t\t\t\tthis.close()\n\t\t\t}, pongTimeout)\n\t\t}, pingTimeout)\n\t}\n\n\tprivate _heartReset () {\n\t\tclearInterval(this._pingIntervalId)\n\t\tclearTimeout(this._pongTimeoutId)\n\t}\n\n\tprivate _clearTimeouts (): void {\n\t\tclearTimeout(this._connectTimeout)\n\t\tclearTimeout(this._uptimeTimeout)\n\t\tthis._heartReset()\n\t}\n}\n"],"names":["type","target","__extends","error","_super","_this","message","Event","code","reason","getGlobalWebSocket","WebSocket","isWebSocket","w","CLOSING","url","protocols","options","open","close","event","_debug","minUptime","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","_binaryType","enableHeartbeat","_heartCheck","_messageQueue","forEach","send","onopen","_listeners","listener","_callEventListener","onmessage","_clearTimeouts","_shouldReconnect","_connect","onclose","_disconnect","undefined","onerror","_url","_protocols","maxReconnectionDelay","minReconnectionDelay","Math","random","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","maxEnqueuedMessages","startClosed","pingTimeout","pongTimeout","pingMsg","debug","Object","WebsocketReconnect","value","max","_retryCount","bytes","reduce","acc","length","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","CLOSED","CONNECTING","OPEN","_closeCalled","data","push","filter","l","listeners","listeners_1","__values","handleEvent","_connectLock","_a","_removeListeners","Error","_wait","then","_getNextUrl","_addEventListeners","_handleTimeout","_handleClose","CloseEvent","Promise","resolve","_getNextDelay","delay","pow","urlProvider","_handleError","ErrorEvent","_i","args","console","log","addEventListener","_handleOpen","_handleMessage","removeEventListener","_heartReset","_heartStart","_pingIntervalId","setInterval","_pongTimeoutId","clearInterval"],"mappings":"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"}